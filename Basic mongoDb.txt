    Mongo Db 


*.      connect with mongo shell
                mongosh

*.      Display databases
                show dbs

*.      Create databases
                use database_name

*.      Show databases 
                show dbs

*.      Create a collection 
                db.createCollection("posts")

*.      show collection
                show collections

*.  Insertion

*.      Insert One
                doc = {};
                db.collection_name.insertOne(doc)

*.      Insert Many
                doc1 = {};
                doc2 = {};
                db.posts.insertMany([doc1, doc2]);

        FIND

*       find one object
                db.getCollection(collection_name).findOne({})
                (collection_name in string format, {} empty query)

*       find multiple objects
                db.getCollection(collection_name).find({})


        Query Operators

*       $or     $and    $in
        $eq     $lt     $gt
        $ne     $nin    $regex

        $gt
        ex :    age : 23
                age : 24
                age : 25     find age > 24

                db.getCollection(collection_name).find({
                        age: {$gt: 24}
                });

        $and
                db.getCollection(collection_name).find({
                        $and: [
                                {age: {$lt: 25}},
                                {age: {$gt: 24}}
                        ]
                });

        $in 
                db.getCollection(collection_name).find({
                        age: {
                                $in: [
                                        23, 24
                                ]
                        }
                })

*       sort(), limit(), skip()
                db.getCollection(collection_name).find({}).limit(2) - returns 2 database_name
                db.getCollection(collection_name).find({}).skip(2)  - skip first 2 database_name
                db.getCollection(collection_name).find({}).sort({age: 1}) - ascending
                db.getCollection(collection_name).find({}).sort({age: -1}) - descending

*       Update
        $set    $unset  $inc
        $rename $currentDate    $addToSet

        set age from 23 to 26
        db.collection_name.updateOne(
                {name: "unique name"},
                {$set: {
                        age: 26
                }}
        )

        increment age 
        db.collection_name.updateOne(
                {name: "unique name"},
                {$inc: {
                        age: 1
                }}
        )


*       Delete

        delete a specific document
        db.collection_name.deleteOne({
                name: "unique name"
        })
        db.collection_name.deleteMany({
                age: 18
        })


*       Aggregation

        collect specific details of field
        db.collection_name.aggregate([
                {$group: {
                        _id: "$age
                }}
        ])